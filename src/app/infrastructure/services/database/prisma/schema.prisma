generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://giga:giga@localhost/shoebiz"
}

model newsletter {
  id          String   @id @default(uuid())
  email       String   @unique
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Customer {
  id                        String    @id @default(uuid())
  name                      String
  email                     String    @unique
  password                  String
  profileImage              String?
  phoneNumber               String?   @unique
  otp                       String?
  confirmedEmail            Boolean?
  orders                    Order[]   // Customer can have many orders
  created_at                DateTime  @default(now())
  updated_at                DateTime? @updatedAt
}

model Seller {
  id                        String    @id @default(uuid())
  name                      String
  email                     String    @unique
  password                  String
  profileImage              String?
  phoneNumber               String?   @unique
  otp                       String?
  confirmedEmail            Boolean?
  role                      String @default("Seller")
  created_at                DateTime  @default(now())
  updated_at                DateTime? @updatedAt
}

model Order {
  id                        String     @id @default(uuid())
  user                      Customer   @relation(fields: [customerId], references: [id])
  customerId                String
  items                     CartItem[]
  // For order status, we should have "pending,"
  status                    String @default("Pending")
  created_at                DateTime   @default(now())
  updated_at                DateTime?  @updatedAt
}

model CartItem {
  id             String    @id @default(uuid())
  quantity       Int
  size           String
  product        Product   @relation(fields: [productId], references: [id]) // CartItem relates to Product
  productId      String
  order          Order     @relation(fields: [orderId], references: [id]) // CartItem belongs to an Order
  orderId        String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Product {
  id                        String    @id @default(uuid())
  name                      String
  description               String
  oldPrice                  String?
  newPrice                  String
  shoeSize                  String[]
  images                    String[]
  tag                       String[]
  cartItems                 CartItem[] // Product can be in multiple CartItems
  created_at                DateTime  @default(now())
  updated_at                DateTime? @updatedAt
}
