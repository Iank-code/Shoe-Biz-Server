2024-03-20 18:55:55:5555 [31merror[39m: [31mConnection timeout[39m
2024-03-20 18:59:52:5952 [31merror[39m: [31m[39m
[31mInvalid `db.customer.create()` invocation in[39m
[31m/home/mose/Videos/videos/Shoe biz/shoe_biz_server/src/app/infrastructure/repository/customer.repository.ts:34:42[39m

[31m  31 const salt = await bcrypt.genSalt(10);[39m
[31m  32 const hashed = bcrypt.hashSync(payload.password, salt);[39m
[31m  33 [39m
[31mâ†’ 34 const customer = await db.customer.create([39m
[31mUnique constraint failed on the fields: (`email`)[39m
2024-03-20 19:00:08:08 [31merror[39m: [31m[39m
[31mInvalid `db.customer.create()` invocation in[39m
[31m/home/mose/Videos/videos/Shoe biz/shoe_biz_server/src/app/infrastructure/repository/customer.repository.ts:34:42[39m

[31m  31 const salt = await bcrypt.genSalt(10);[39m
[31m  32 const hashed = bcrypt.hashSync(payload.password, salt);[39m
[31m  33 [39m
[31mâ†’ 34 const customer = await db.customer.create([39m
[31mUnique constraint failed on the fields: (`email`)[39m
2024-03-20 20:39:05:395 [31merror[39m: [31mConnection timeout[39m
2024-03-22 22:39:27:3927 [31merror[39m: [31mgetaddrinfo EAI_AGAIN smtp.gmail.com[39m
2024-03-22 22:46:52:4652 [31merror[39m: [31m[39m
[31mInvalid `db.seller.create()` invocation in[39m
[31m/home/mose/Videos/videos/Shoe biz/shoe_biz_server/src/app/infrastructure/repository/seller.repository.ts:34:40[39m

[31m  31 const salt = await bcrypt.genSalt(10);[39m
[31m  32 const hashed = bcrypt.hashSync(payload.password, salt);[39m
[31m  33 [39m
[31mâ†’ 34 const customer = await db.seller.create([39m
[31mUnique constraint failed on the fields: (`email`)[39m
2024-04-23 22:11:27:1127 [31merror[39m: [31mgetaddrinfo EAI_AGAIN smtp.gmail.com[39m
2024-05-01 19:50:02:502 [31merror[39m: [31m[39m
[31mInvalid `db.seller.create()` invocation in[39m
[31m/home/mose/Videos/videos/Shoe biz/shoe_biz_server/src/app/infrastructure/repository/seller.repository.ts:34:40[39m

[31m  31 const salt = await bcrypt.genSalt(10);[39m
[31m  32 const hashed = bcrypt.hashSync(payload.password, salt);[39m
[31m  33 [39m
[31mâ†’ 34 const customer = await db.seller.create([39m
[31mUnique constraint failed on the fields: (`email`)[39m
2024-05-11 19:18:22:1822 [31merror[39m: [31mread ECONNRESET[39m
2024-05-12 13:26:52:2652 [31merror[39m: [31mRequest failed with status code 400[39m
2024-05-12 13:27:09:279 [31merror[39m: [31mRequest failed with status code 400[39m
2024-05-12 13:28:14:2814 [31merror[39m: [31mRequest failed with status code 400[39m
2024-05-12 13:32:35:3235 [31merror[39m: [31mRequest failed with status code 400[39m
2024-07-08 20:59:24:5924 [31merror[39m: [31mMissing credentials for "PLAIN"[39m
2024-07-08 20:59:29:5929 [31merror[39m: [31m[39m
[31mInvalid `db.customer.create()` invocation in[39m
[31m/home/giga/Desktop/Open Source/shoe-biz/Shoe-Biz-Server/src/app/infrastructure/repository/customer.repository.ts:34:42[39m

[31m  31 const salt = await bcrypt.genSalt(10);[39m
[31m  32 const hashed = bcrypt.hashSync(payload.password, salt);[39m
[31m  33 [39m
[31mâ†’ 34 const customer = await db.customer.create([39m
[31mUnique constraint failed on the fields: (`email`)[39m
2024-07-08 21:03:33:333 [31merror[39m: [31msecretOrPrivateKey must have a value[39m
2024-07-08 21:03:40:340 [31merror[39m: [31msecretOrPrivateKey must have a value[39m
2024-07-08 21:10:14:1014 [31merror[39m: [31m[39m
[31mInvalid `db.customer.create()` invocation in[39m
[31m/home/giga/Desktop/Open Source/shoe-biz/Shoe-Biz-Server/src/app/infrastructure/repository/customer.repository.ts:34:42[39m

[31m  31 const salt = await bcrypt.genSalt(10);[39m
[31m  32 const hashed = bcrypt.hashSync(payload.password, salt);[39m
[31m  33 [39m
[31mâ†’ 34 const customer = await db.customer.create([39m
[31mUnique constraint failed on the fields: (`email`)[39m
2024-07-08 22:25:36:2536 [31merror[39m: [31m[39m
[31mInvalid `db.customer.create()` invocation in[39m
[31m/home/giga/Desktop/Open Source/shoe-biz/Shoe-Biz-Server/src/app/infrastructure/repository/customer.repository.ts:34:42[39m

[31m  31 const salt = await bcrypt.genSalt(10);[39m
[31m  32 const hashed = bcrypt.hashSync(payload.password, salt);[39m
[31m  33 [39m
[31mâ†’ 34 const customer = await db.customer.create([39m
[31mUnique constraint failed on the fields: (`email`)[39m
2024-10-30 00:20:47:2047 [31merror[39m: [31m[39m
[31mInvalid `db.product.create()` invocation in[39m
[31m/home/giga/Desktop/Open Source/shoe-biz/Shoe-Biz-Server/src/app/infrastructure/services/database/seeders/product.seeder.ts:43:40[39m

[31m  40 try {[39m
[31m  41   for (let i = 0; i < 10; i++) {[39m
[31m  42     // Create product with its tags[39m
[31mâ†’ 43     const product = await db.product.create([39m
[31mThe table `public.Tag` does not exist in the current database.[39m
2024-10-30 01:07:17:717 [31merror[39m: [31m[39m
[31mInvalid `db.product.findMany()` invocation in[39m
[31m/home/giga/Desktop/Open Source/shoe-biz/Shoe-Biz-Server/src/app/infrastructure/repository/product.repository.ts:10:44[39m

[31m   7 [39m
[31m   8 async getAll() {[39m
[31m   9   try {[39m
[31mâ†’ 10     const allProducts = await db.product.findMany({[39m
[31m           select: {[39m
[31m         ?   id?: true,[39m
[31m         ?   name?: true,[39m
[31m         ?   description?: true,[39m
[31m         ?   oldPrice?: true,[39m
[31m         ?   newPrice?: true,[39m
[31m         ?   shoeSize?: true,[39m
[31m         ?   images?: true,[39m
[31m         ?   tag?: true,[39m
[31m         ?   created_at?: true,[39m
[31m         ?   updated_at?: true,[39m
[31m         ?   cartItems?: true,[39m
[31m         ?   colorVariants?: true,[39m
[31m         ?   sizeVariants?: true,[39m
[31m         ?   tags?: true,[39m
[31m         ?   _count?: true[39m
[31m           }[39m
[31m         })[39m

[31mThe `select` statement for type Product needs at least one truthy value.[39m
